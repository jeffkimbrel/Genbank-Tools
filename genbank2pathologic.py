#! /usr/bin/env python

from Bio import SeqIO
import re
import os
import sys
import argparse
import datetime

## MISC ########################################################################

timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

## OPTIONS #####################################################################

parser = argparse.ArgumentParser(description='Parse Genbank file to Pathologic Format')

parser.add_argument('-g', '--genbank',
    help="Genbank file",
    required=True)

parser.add_argument('-o', '--out',
    help="Output folder",
    required=True)

args = parser.parse_args()

## OUTPUT PATH #################################################################

fullOutputPath = os.path.dirname(os.path.abspath(args.out)) + "/" + args.out.split("/")[-1]

if not os.path.exists(fullOutputPath):
    os.makedirs(fullOutputPath)

## GENETIC-ELEMENTS.DAT ########################################################

geneticElementsFileHandle = open(fullOutputPath + "/genetic-elements.dat", "w")


geneticElementsFileHandle.write(";;=================================================\n")
geneticElementsFileHandle.write(";; Automatically generated by genbank2pathologic.py\n")
geneticElementsFileHandle.write(";; " + timestamp + "\n")
geneticElementsFileHandle.write(";; INPUT:" + args.genbank + "\n")
geneticElementsFileHandle.write(";; OUTPUT:" + fullOutputPath + "\n")
geneticElementsFileHandle.write(";;=================================================\n\n")

for seq_record in SeqIO.parse(args.genbank, "genbank"):

    geneticElementsFileHandle.write("ID\t" + seq_record.id + "\n")
    geneticElementsFileHandle.write("TYPE\t:CONTIG\n")
    geneticElementsFileHandle.write("CIRCULAR?\tN\n")
    geneticElementsFileHandle.write("CODON-TABLE\t11\n")
    geneticElementsFileHandle.write("ANNOT-FILE\t" + fullOutputPath + "/" + seq_record.id + ".pf\n")
    geneticElementsFileHandle.write("SEQ-FILE\t" + fullOutputPath + "/" + seq_record.id + ".fsa\n")
    geneticElementsFileHandle.write("//\n")

geneticElementsFileHandle.close()
